/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        number_pad {
            bindings = <&to 2>;
            key-positions = <38 39>;
            layers = <0>;
        };

        to_default {
            bindings = <&to 0>;
            key-positions = <0 38 39>;
            layers = <2>;
        };
    };

    behaviors {
        hold_tap: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            hold-trigger-key-positions = <36>;
            tapping-term-ms = <5>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp ESCAPE        &kp Q  &kp W  &kp E                 &kp R      &kp T    &kp Y  &kp U      &kp I       &kp O    &kp P     &kp BSPC
&kp TAB           &kp A  &kp S  &kp D                 &kp F      &kp G    &kp H  &kp J      &kp K       &kp L    &kp SEMI  &kp SQT
&kp LEFT_CONTROL  &kp Z  &kp X  &kp C                 &kp V      &kp B    &kp N  &kp M      &kp COMMA   &kp DOT  &kp FSLH  &kp RIGHT_SHIFT
                                &hold_tap 3 LEFT_GUI  &kp SPACE  &mo 1    &mo 0  &kp ENTER  &kp DELETE
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp GRAVE  &kp N1     &kp N2       &kp N3     &kp N4      &kp N5         &kp N6     &kp N7            &kp N8             &kp N9                &kp N0                 &kp DELETE
&kp TILDE  &kp EXCL   &kp AT_SIGN  &kp POUND  &kp DOLLAR  &kp PERCENT    &kp CARET  &kp AMPS          &kp ASTERISK       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp BACKSLASH
&kp PIPE   &kp UNDER  &kp MINUS    &kp EQUAL  &kp PLUS    &none          &none      &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_BRACE        &kp RIGHT_BRACE        &none
                                   &none      &none       &none          &none      &kp ENTER         &none
            >;
        };

        layer_2 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &kp CLEAR   &kp N7        &kp N8        &kp N9        &kp MINUS   &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp SLASH   &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp PLUS    &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp ASTRK   &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp PERIOD  &trans
                        &trans  &trans  &none     &kp K_CALC  &kp ENTER     &kp N0
            >;
        };

        layer_3 {
            bindings = <
&trans         &trans  &trans  &trans  &trans  &trans    &trans  &trans        &kp LG(UP_ARROW)  &trans         &trans  &trans
&trans         &trans  &trans  &trans  &trans  &trans    &trans  &kp LG(LEFT)  &kp LG(DOWN)      &kp LG(RIGHT)  &trans  &trans
&kp LA(LCTRL)  &trans  &trans  &trans  &trans  &trans    &trans  &trans        &none             &trans         &trans  &trans
                               &trans  &trans  &trans    &trans  &trans        &trans
            >;
        };
    };
};
